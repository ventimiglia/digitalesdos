#include "chip.h"
#include "board.h"
#include <cr_section_macros.h>
#define port 0
#define output 1
#define pGPIO LPC_GPIO

bool dir = 1;
int _step = 0;
int i = 0;

void InitHardware(void);
void InitSetOutput (void);
void Girar (void);

int main(void) {

 InitHardware();
InitSetOutput();
while(1) {
Girar();
}
return 0 ;
}

void InitHardware (void) {
SystemCoreClockUpdate();
Board_Init();
Board_LED_Set(0, true);
}

void InitSetOutput (void) {
//Puerto 0 pines 6 7 8 y 9
Chip_GPIO_SetPinDIROutput(pGPIO, port, 6);
Chip_GPIO_SetPinOutLow(LPC_GPIO, 1, 6);
Chip_GPIO_SetPinDIROutput(pGPIO, port, 7);
Chip_GPIO_SetPinOutLow(LPC_GPIO, 1, 7);
Chip_GPIO_SetPinDIROutput(pGPIO, port, 8);
Chip_GPIO_SetPinOutLow(LPC_GPIO, 1, 8);
Chip_GPIO_SetPinDIROutput(pGPIO, port, 9);
Chip_GPIO_SetPinOutLow(LPC_GPIO, 1, 9);
}

void Girar (void) {
switch (_step){
case 0:
Chip_GPIO_SetPinOutLow(pGPIO,port,6);
Chip_GPIO_SetPinOutLow(pGPIO,port,7);
Chip_GPIO_SetPinOutLow(pGPIO,port,8);
Chip_GPIO_SetPinOutHigh(pGPIO,port,9);
break;
case 1:
Chip_GPIO_SetPinOutLow(pGPIO,port,6);
Chip_GPIO_SetPinOutLow(pGPIO,port,7);
Chip_GPIO_SetPinOutHigh(pGPIO,port,8);
Chip_GPIO_SetPinOutLow(pGPIO,port,9);
break;
case 2:
Chip_GPIO_SetPinOutLow(pGPIO,port,6);
Chip_GPIO_SetPinOutHigh(pGPIO,port,7);
Chip_GPIO_SetPinOutLow(pGPIO,port,8);
Chip_GPIO_SetPinOutLow(pGPIO,port,9);
break;
case 3:
Chip_GPIO_SetPinOutHigh(pGPIO,port,6);
Chip_GPIO_SetPinOutLow(pGPIO,port,7);
Chip_GPIO_SetPinOutLow(pGPIO,port,8);
Chip_GPIO_SetPinOutLow(pGPIO,port,9);
break;
case 4:
Chip_GPIO_SetPinOutLow(pGPIO,port,6);
Chip_GPIO_SetPinOutHigh(pGPIO,port,7);
Chip_GPIO_SetPinOutLow(pGPIO,port,8);
Chip_GPIO_SetPinOutLow(pGPIO,port,9);
break;
case 5:
Chip_GPIO_SetPinOutLow(pGPIO,port,6);
Chip_GPIO_SetPinOutHigh(pGPIO,port,7);
Chip_GPIO_SetPinOutLow(pGPIO,port,8);
Chip_GPIO_SetPinOutLow(pGPIO,port,9);
break;
case 6:
Chip_GPIO_SetPinOutLow(pGPIO,port,6);
Chip_GPIO_SetPinOutLow(pGPIO,port,7);
Chip_GPIO_SetPinOutHigh(pGPIO,port,8);
Chip_GPIO_SetPinOutLow(pGPIO,port,9);
break;
}

 if(dir)
{
_step++;
}else
{
_step--;
}
if(_step>4) {
	_step=0;
}
if(_step<0) {
_step=4;
}
for (i=0; i<0xFFFF; i++);
}
